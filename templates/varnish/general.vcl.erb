<%
	 default_cache_time = ENVIRONMENT.eql?('production') ? '600s' : '1s'
%>
vcl 4.0;
# generated varnish config: <%= ENVIRONMENT %>
# local test: <%= LOCAL_TEST_MODE ? 'ENABLED' : 'DISABLED' %>

### Called when a client request is received
sub vcl_recv {
	## Internal requests for content/partials
	## we use internal.core to not have this part open to public
	if (req.http.host ~ "^internal.core$") {
		if (req.url ~ "^/template/content") {
			std.log("template content identified! Page:" + req.url);
			set req.backend_hint = core_backend_director.backend();
			return (hash);
		} else if (req.url ~ "^/template/partial") {
			std.log("template partial identified! Page:" + req.url);
			set req.backend_hint = core_backend_director.backend();
			return (hash);
		} else if (req.url ~ "^/template/page") {
			std.log("template page identified! Page:" + req.url);
			set req.backend_hint = core_backend_director.backend();
			return (hash);
		}
	}

	### always cache these items:

	# varnish is alive. Get health state from core plugin.
	if (req.url ~ "^/health$") {
		return (hash);
	}

	#if (req.method == "GET" && req.url ~ "\.(js)") {
	#	return (hash);
	#}

	## images
	#if (req.method == "GET" && req.url ~ "\.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|img|tga|wmf)$") {
	#	return (hash);
	#}

	## various other content pages
	#if (req.method == "GET" && req.url ~ "\.(css)$") {
	#	return (hash);
	#}

	## multimedia
	#if (req.method == "GET" && req.url ~ "\.(svg|swf|ico|mp3|mp4|m4a|ogg|mov|avi|wmv)$") {
	#	return (hash);
	#}

	## xml

	#if (req.method == "GET" && req.url ~ "\.(xml)$") {
	#	return (hash);
	#}
}

### Called when the requested object has been retrieved from the backend, or the request to the backend has failed
### TODO: hardly changed from varnish 3. Is it still working??? Check!!!
sub vcl_backend_response {
	if (bereq.method == "GET" && bereq.url ~ "\.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|img|tga|wmf)$") {
		unset beresp.http.set-cookie;
		set beresp.ttl = <%= default_cache_time %>;
	}

	## various other content pages
	if (bereq.method == "GET" && bereq.url ~ "\.(css)$") {
		unset beresp.http.set-cookie;
		set beresp.ttl = <%= default_cache_time %>;
	}

	if (bereq.method == "GET" && bereq.url ~ "\.(js)$") {
		unset beresp.http.set-cookie;
		set beresp.ttl = <%= default_cache_time %>;
	}

	## xml
	if (bereq.method == "GET" && bereq.url ~ "\.(xml)$") {
		unset beresp.http.set-cookie;
		set beresp.ttl = <%= default_cache_time %>;
	}

	## multimedia
	if (bereq.method == "GET" && bereq.url ~ "\.(svg|swf|ico|mp3|mp4|m4a|ogg|mov|avi|wmv)$") {
		unset beresp.http.set-cookie;
		set beresp.ttl = <%= default_cache_time %>;
	}

	# Allow items to be stale if needed.
	set beresp.grace = 6h;

	if (beresp.http.X-Do-Esi ~ "true") {
		set beresp.do_esi = true;
	}

	<% if LOCAL_TEST_MODE %>
	set beresp.ttl = 1s;
	<% end %>
}

#
#
## Called before a cached object is delivered to the client
#
sub vcl_deliver {
	set resp.http.X-Served-By = server.hostname;
	if (obj.hits > 0) {
		set resp.http.X-Cache = "HIT";
		set resp.http.X-Cache-Hits = obj.hits;
	} else {
		set resp.http.X-Cache = "MISS";
	}

	return(deliver);
}
